---
- name: Credentials Assets
  block:
  - name: Create Temp Workspace
    ansible.builtin.tempfile:
      suffix: temp_aap_import
      state: directory
    register: awx_import_secrets_temp_folder
    delegate_to: localhost

  - name: Write Key File
    ansible.builtin.lineinfile:
      path: "{{ awx_import_secrets_temp_folder.path }}/key"
      line: "{{ awx_export_secrets_vault_pass }}"
      create: true
      state: present
    delegate_to: localhost
    no_log: "{{ no_log_var }}"


  - name: Decrypt Credentials Asset
    ansible.builtin.command: "ansible-vault decrypt {{ __ansible_automation_platform_awx_import_assets_path }}/credentials.json --output {{ awx_import_secrets_temp_folder.path }}/credentials.json --vault-password-file {{ awx_import_secrets_temp_folder.path }}/key"
    delegate_to: localhost
    #no_log: "{{ no_log_var }}"

  - name: Import Credentials Assets
    set_fact:
      ansible_automation_platform_awx_import_credentials: "{{ lookup('file', '{{ awx_import_secrets_temp_folder.path }}/credentials.json') }}"
      
  always:
  - name: Remove Temporary Working Directory
    file:
      path: "{{ awx_import_secrets_temp_folder.path }}"
      state: absent
    delegate_to: localhost


- name: Check for Ansible Tower Credential
  include_tasks: ansible_tower_credential_type.yml
  loop: "{{ ansible_automation_platform_awx_import_credentials.credentials }}"
  loop_control:
    loop_var: tower_check
  when: "tower_check.credential_type.name == 'Ansible Tower'"
  no_log: "{{ no_log_var }}"

- name: Add Credentials
  ansible.controller.credential:
    name:                           "{{ __controller_credentials_item.name | mandatory }}"
    new_name:                       "{{ __controller_credentials_item.new_name | default(omit, true) }}"
    copy_from:                      "{{ __controller_credentials_item.copy_from | default(omit, true) }}"
    description:                    "{{ __controller_credentials_item.description | default(omit, true) }}"
    organization:                   "{{ __controller_credentials_item.organization.name | default( __controller_credentials_item.organization | default(omit, true)) }}"
    credential_type:                "{{ __controller_credentials_item.credential_type.name | default( __controller_credentials_item.credential_type | default(omit, true)) }}"
    inputs:                         "{{ __controller_credentials_item.inputs | default(omit, true) }}"
    user:                           "{{ __controller_credentials_item.user.username | default( __controller_credentials_item.user | default(omit, true)) }}"
    team:                           "{{ __controller_credentials_item.team.name | default( __controller_credentials_item.team | default(omit, true)) }}"
    update_secrets:                 "{{ __controller_credentials_item.update_secrets | default(omit) }}"
    state:                          "{{ __controller_credentials_item.state | default(controller_state | default('present')) }}"
    controller_username:            "{{ controller_username }}"
    controller_password:            "{{ controller_password }}"
    controller_host:                "{{ inventory_hostname }}"
    validate_certs:                 "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ ansible_automation_platform_awx_import_credentials.credentials }}"
  loop_control:
    loop_var: __controller_credentials_item
  no_log: "{{ no_log_var }}"
...
