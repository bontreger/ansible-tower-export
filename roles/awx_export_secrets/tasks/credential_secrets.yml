---
# tasks file for awx_export_secrets

- name: Initialize empty Credential List
  set_fact:
    awx_export_secrets_credentials_list: []

- name: Export Credential Object List
  ansible.controller.export:
    tower_host: "{{ inventory_hostname }}"
    tower_password: "{{ awx_export_password }}"
    tower_username: "{{ awx_export_user }}"
    validate_certs: false
    credentials: all
  delegate_to: localhost
  register: export_data
  no_log: "{{ no_log_var }}"

- name: Run AWX Database Query
  shell: "PGPASSWORD={{ awx_export_secrets_database_password }} psql -h {{ awx_export_secrets_remote_db_host }} -p {{ awx_export_secrets_remote_db_port }} -t -A -U {{ awx_export_secrets_database_user }} -d {{ awx_export_secrets_database_name }} -c \"select name,id from main_credentialtype;\""
  register: awx_export_secrets_database_query_credential_type
  no_log: "{{ no_log_var }}"
  when: not awx_export_secrets_all_in_one

- name: Run AWX Database Query
  shell: "PGPASSWORD={{ awx_export_secrets_database_password }} psql -t -A -U {{ awx_export_secrets_database_user }} -d {{ awx_export_secrets_database_name }} -c \"select name,id from main_credentialtype;\""
  register: awx_export_secrets_database_query_credential_type
  no_log: "{{ no_log_var }}"
  when: awx_export_secrets_all_in_one 

- set_fact:
    awx_export_secrets_credential_table: "{{ awx_export_secrets_credential_table | default({}) | combine( { item.split('|')[0] : item.split('|')[1] } ) }}"
  loop: "{{ awx_export_secrets_database_query_credential_type.stdout_lines }}"

- include_tasks: process_secret.yml
  loop: "{{ export_data.assets.credentials }}"
  loop_control:
    loop_var: awx_export_secrets_credential_object

- name: Generate Content Variable
  set_fact:
    file_content:
      credentials: "{{ awx_export_secrets_credentials_list }}"
  no_log: "{{ no_log_var }}"

- block:
  - name: Create Temporary Working Directory
    ansible.builtin.tempfile:
      suffix: temp_aap_installer
      state: directory
    register: awx_export_secrets_temp_folder
    delegate_to: localhost

  - name: Write Data to Temp File
    ansible.builtin.copy:
      dest: "{{ awx_export_secrets_temp_folder.path }}/process.json"
      content: "{{ file_content |to_nice_json(indent=4) }}"
    delegate_to: localhost
    no_log: "{{ no_log_var }}"

  - name: Generate Vault Passwort File
    ansible.builtin.lineinfile:
      path: "{{ awx_export_secrets_temp_folder.path }}/vault_password"
      line: "{{ awx_export_secrets_vault_pass }}"
      create: true
      state: present
    delegate_to: localhost
    no_log: "{{ no_log_var }}"

  - name: Encrypt Credentials File
    command: "ansible-vault encrypt --vault-password-file {{ awx_export_secrets_temp_folder.path }}/vault_password {{ awx_export_secrets_temp_folder.path }}/process.json"
    delegate_to: localhost
    no_log: "{{ no_log_var }}"

  - name: Copy Final File to Destination
    ansible.builtin.copy:
      src: "{{ awx_export_secrets_temp_folder.path }}/process.json"
      dest: "{{ awx_export_secrets_export_path }}/credentials.json"
      decrypt: false
    delegate_to: "{{ awx_export_file_host }}"
    remote_user: "{{ awx_export_file_user }}"

  always:
  - name: Remove Temporary Working Directory
    file:
      path: "{{ awx_export_secrets_temp_folder.path }}"
      state: absent
    delegate_to: localhost


