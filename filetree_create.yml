---
- name: Playbook to configure AAP controller post-installation
  hosts: localhost
  vars_files:
    - "vault.yml"
  connection: local
  vars:
    controller_username: "{{ vault_controller_username | default(lookup('env', 'CONTROLLER_USERNAME')) }}"
    controller_password: "{{ vault_controller_password | default(lookup('env', 'CONTROLLER_PASSWORD')) }}"
    controller_hostname: "{{ vault_controller_hostname | default(lookup('env', 'CONTROLLER_HOST')) }}"
    controller_validate_certs: "{{ vault_controller_validate_certs | default(lookup('env', 'CONTROLLER_VERIFY_SSL')) }}"
# I can't explain why, but exporting certain objects with the filetree command (schedules were the ones that got me), you have to use a token
  pre_tasks:
    - name: "Setup authentication (block)"
      block:
        - name: "Get the Authentication Token for the future requests"
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            method: POST
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: "Set the oauth token to be used since now"
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"
      no_log: "{{ controller_configuration_filetree_create_secure_logging | default('false') }}"
      when: controller_oauthtoken is not defined
      tags:
        - always
  tasks:
    - name: filetree create
      ansible.builtin.include_role:
        name: infra.controller_configuration.filetree_create
      vars:
        valid_tags: all
        input_tag: ['all']
        flatten_output: true

    - name: Write out filetree_create files to local filesystem
      ansible.builtin.copy:
        src: "/tmp/filetree_output/"
        dest: "{{ awx_export_path }}/"
      delegate_to: "{{ awx_export_file_host }}"
      remote_user: "{{ awx_export_file_user }}"
